scalar UnsignedInt

scalar Numeric

enum Element {
  """
  # 炎
  """
  PYRO
  """
  # 水
  """
  HYDRO
  """
  # 氷
  """
  CRYO
  """
  # 雷
  """
  ELECTRO
  """
  # 風
  """
  ANEMO
  """
  # 岩
  """
  GEO
  """
  # 草
  """
  DENDRO
}

enum WeaponKind {
  """
  # 片手剣
  """
  SWORD
  """
  # 両手剣
  """
  CLAYMORE
  """
  # 弓
  """
  BOW
  """
  # 法器
  """
  CATALYST
  """
  # 長柄武器
  """
  POLEARM
}

enum Region {
  """
  # モンド
  """
  MONDSTADT
  """
  # 璃月
  """
  LIYUE
  """
  # 稲妻
  """
  INAZUMA
  """
  # スメール
  """
  SUMERU
  """
  # フォンテーヌ
  """
  FONTAINE
  """
  # ナタ
  """
  NATLAN
  """
  # スネージナヤ
  """
  SNEZHNAYA
}

enum OrderDirection {
  ASC
  DESC
}

enum CharacterOrderField {
  HEALTH
  ATTACK
  DEFENCE
  ELEMENT_ENERGY
  UNIQUE_ABILITY_SCORE
}

enum ComparisonOperator {
  EQ
  LT
  LTE
  GT
  GTE
}

type UniqueAbility {
  kind: String!
  score: Float!
}

type Character {
  name: String!
  element: Element!
  weaponKind: WeaponKind!
  region: Region!
  rarelity: Int!
  health: Int!
  attack: Int!
  defence: Int!
  elementEnergy: Int!
  uniqueAbility: UniqueAbility!
}

type CharacterConnection {
  nodes: [Character!]!
  pageInfo: PageInfo!
}

type PageInfo {
  hasNext: Boolean!
  endCursor: String
}

input ComparisonCriterion {
  op: ComparisonOperator!
  value: Numeric!
}

input CharactersOrder {
  field: CharacterOrderField!
  direction: OrderDirection!
}

input CharacterFilterCriteria {
  element: Element
  weaponKind: WeaponKind
  region: Region
  uniqueAbilityKind: String
  rarelity: Int
  health: ComparisonCriterion
  attack: ComparisonCriterion
  defence: ComparisonCriterion
  elementEnergy: ComparisonCriterion
  uniqueAbilityScore: ComparisonCriterion
}

extend type Query {
  character(name: String!): Character
  characters(
    order: CharactersOrder
    filter: CharacterFilterCriteria
    first: UnsignedInt!
  ): CharacterConnection!
}
